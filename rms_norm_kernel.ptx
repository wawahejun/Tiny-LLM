//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30672275
// Cuda compilation tools, release 11.5, V11.5.119
// Based on NVVM 7.0.1
//

.version 7.5
.target sm_86
.address_size 64

	// .globl	rms_norm
// _ZZ8rms_normE10shared_sum has been demoted

.visible .entry rms_norm(
	.param .u64 rms_norm_param_0,
	.param .u64 rms_norm_param_1,
	.param .u64 rms_norm_param_2,
	.param .f32 rms_norm_param_3,
	.param .u32 rms_norm_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<13>;
	// demoted variable
	.shared .align 4 .b8 _ZZ8rms_normE10shared_sum[1024];

	ld.param.u64 	%rd5, [rms_norm_param_0];
	ld.param.u64 	%rd3, [rms_norm_param_1];
	ld.param.u64 	%rd4, [rms_norm_param_2];
	ld.param.f32 	%f3, [rms_norm_param_3];
	ld.param.u32 	%r8, [rms_norm_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r3, %r9, %r1, %r2;
	setp.ge.s32 	%p1, %r3, %r8;
	cvt.s64.s32 	%rd1, %r3;
	cvta.to.global.u64 	%rd6, %rd5;
	mul.wide.s32 	%rd7, %r3, 4;
	add.s64 	%rd2, %rd6, %rd7;
	mov.f32 	%f18, 0f00000000;
	@%p1 bra 	$L__BB0_2;

	ld.global.f32 	%f5, [%rd2];
	mul.f32 	%f18, %f5, %f5;

$L__BB0_2:
	shl.b32 	%r10, %r2, 2;
	mov.u32 	%r11, _ZZ8rms_normE10shared_sum;
	add.s32 	%r4, %r11, %r10;
	st.shared.f32 	[%r4], %f18;
	bar.sync 	0;
	shr.u32 	%r16, %r1, 1;
	setp.eq.s32 	%p2, %r16, 0;
	@%p2 bra 	$L__BB0_7;

$L__BB0_4:
	setp.ge.u32 	%p3, %r2, %r16;
	@%p3 bra 	$L__BB0_6;

	shl.b32 	%r12, %r16, 2;
	add.s32 	%r13, %r4, %r12;
	ld.shared.f32 	%f6, [%r4];
	ld.shared.f32 	%f7, [%r13];
	add.f32 	%f8, %f7, %f6;
	st.shared.f32 	[%r4], %f8;

$L__BB0_6:
	bar.sync 	0;
	shr.u32 	%r14, %r16, 31;
	add.s32 	%r15, %r16, %r14;
	shr.s32 	%r7, %r15, 1;
	setp.gt.s32 	%p4, %r16, 1;
	mov.u32 	%r16, %r7;
	@%p4 bra 	$L__BB0_4;

$L__BB0_7:
	@%p1 bra 	$L__BB0_9;

	ld.shared.f32 	%f9, [_ZZ8rms_normE10shared_sum];
	cvt.rn.f32.s32 	%f10, %r8;
	add.f32 	%f11, %f10, %f3;
	div.rn.f32 	%f12, %f9, %f11;
	sqrt.rn.f32 	%f13, %f12;
	ld.global.f32 	%f14, [%rd2];
	cvta.to.global.u64 	%rd8, %rd3;
	shl.b64 	%rd9, %rd1, 2;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.f32 	%f15, [%rd10];
	mul.f32 	%f16, %f15, %f14;
	div.rn.f32 	%f17, %f16, %f13;
	cvta.to.global.u64 	%rd11, %rd4;
	add.s64 	%rd12, %rd11, %rd9;
	st.global.f32 	[%rd12], %f17;

$L__BB0_9:
	ret;

}

